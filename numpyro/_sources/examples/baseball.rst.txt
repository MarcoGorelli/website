.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_examples_baseball.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_baseball.py:


Baseball
========

Original example from Pyro:
https://github.com/pyro-ppl/pyro/blob/dev/examples/baseball.py

Example has been adapted from [1]. It demonstrates how to do Bayesian inference using
NUTS (or, HMC) in Pyro, and use of some common inference utilities.

As in the Stan tutorial, this uses the small baseball dataset of Efron and Morris [2]
to estimate players' batting average which is the fraction of times a player got a
base hit out of the number of times they went up at bat.

The dataset separates the initial 45 at-bats statistics from the remaining season.
We use the hits data from the initial 45 at-bats to estimate the batting average
for each player. We then use the remaining season's data to validate the predictions
from our models.

Three models are evaluated:

    - Complete pooling model: The success probability of scoring a hit is shared
      amongst all players.
    - No pooling model: Each individual player's success probability is distinct and
      there is no data sharing amongst players.
    - Partial pooling model: A hierarchical model with partial data sharing.

We recommend Radford Neal's tutorial on HMC ([3]) to users who would like to get a
more comprehensive understanding of HMC and its variants, and to [4] for details on
the No U-Turn Sampler, which provides an efficient and automated way (i.e. limited
hyper-parameters) of running HMC on different problems.

**References:**

    1. Carpenter B. (2016), `"Hierarchical Partial Pooling for Repeated Binary Trials"
       <http://mc-stan.org/users/documentation/case-studies/pool-binary-trials.html/>`_.
    2. Efron B., Morris C. (1975), "Data analysis using Stein's estimator and its
       generalizations", J. Amer. Statist. Assoc., 70, 311-319.
    3. Neal, R. (2012), "MCMC using Hamiltonian Dynamics",
       (https://arxiv.org/pdf/1206.1901.pdf)
    4. Hoffman, M. D. and Gelman, A. (2014), "The No-U-turn sampler: Adaptively setting
       path lengths in Hamiltonian Monte Carlo", (https://arxiv.org/abs/1111.4246)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading - https://d2hg8soec8ck9v.cloudfront.net/datasets/EfronMorrisBB.txt.
    Download complete.

     ==============================fully_pooled - TRAIN============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente         45         18      10.00      12.00      14.00 

          Frank Robinson         45         17      10.00      12.00      14.00 

            Frank Howard         45         16      10.00      12.00      14.00 

           Jay Johnstone         45         15      10.00      12.00      14.00 

               Ken Berry         45         14      10.00      12.00      14.00 

             Jim Spencer         45         14      10.00      12.00      14.00 

           Don Kessinger         45         13      10.00      12.00      14.00 

           Luis Alvarado         45         12      10.00      12.00      14.00 

               Ron Santo         45         11      10.00      12.00      14.00 

             Ron Swaboda         45         11      10.00      12.00      14.00 

         Rico Petrocelli         45         10      10.00      12.00      14.00 

         Ellie Rodriguez         45         10      10.00      12.00      14.00 

            George Scott         45         10      10.00      12.00      14.00 

               Del Unser         45         10      10.00      12.00      14.00 

          Billy Williams         45         10      10.00      12.00      14.00 

         Bert Campaneris         45          9      10.00      12.00      14.00 

          Thurman Munson         45          8      10.00      12.00      14.00 

               Max Alvis         45          7      10.00      12.00      14.00 


     ==============================fully_pooled - TEST============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente        412        145     102.00     109.00     117.00 

          Frank Robinson        471        144     117.00     125.00     134.00 

            Frank Howard        566        160     141.00     150.00     160.00 

           Jay Johnstone        320         76      79.00      85.00      91.00 

               Ken Berry        463        128     115.00     123.00     131.00 

             Jim Spencer        511        140     127.00     136.00     144.00 

           Don Kessinger        631        168     158.00     168.00     178.00 

           Luis Alvarado        183         41      44.00      49.00      53.00 

               Ron Santo        555        148     139.00     148.00     157.00 

             Ron Swaboda        245         57      60.00      65.00      70.00 

         Rico Petrocelli        583        152     145.00     155.00     164.00 

         Ellie Rodriguez        231         52      56.00      61.00      67.00 

            George Scott        480        142     120.00     128.00     136.00 

               Del Unser        322         83      80.00      86.00      92.00 

          Billy Williams        636        205     159.00     170.00     179.00 

         Bert Campaneris        603        168     151.00     161.00     170.00 

          Thurman Munson        453        137     112.00     120.00     129.00 

               Max Alvis        115         21      27.00      31.00      34.00 


    Log pointwise predictive density: -74.83


     ==============================not_pooled - TRAIN============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente         45         18      15.00      18.00      21.00 

          Frank Robinson         45         17      14.00      17.00      20.00 

            Frank Howard         45         16      13.00      16.00      19.00 

           Jay Johnstone         45         15      12.00      15.00      18.00 

               Ken Berry         45         14      11.00      14.00      17.00 

             Jim Spencer         45         14      11.00      14.00      17.00 

           Don Kessinger         45         13      10.00      13.00      16.00 

           Luis Alvarado         45         12       9.00      12.00      15.00 

               Ron Santo         45         11       9.00      11.00      14.00 

             Ron Swaboda         45         11       8.00      11.00      14.00 

         Rico Petrocelli         45         10       8.00      10.00      13.00 

         Ellie Rodriguez         45         10       8.00      10.00      13.00 

            George Scott         45         10       8.00      10.00      13.00 

               Del Unser         45         10       8.00      10.00      13.00 

          Billy Williams         45         10       8.00      10.00      13.00 

         Bert Campaneris         45          9       7.00       9.00      12.00 

          Thurman Munson         45          8       6.00       8.00      11.00 

               Max Alvis         45          7       5.00       7.00      10.00 


     ==============================not_pooled - TEST============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente        412        145     145.00     166.00     187.00 

          Frank Robinson        471        144     157.00     180.00     204.00 

            Frank Howard        566        160     178.00     203.00     232.00 

           Jay Johnstone        320         76      92.00     108.50     125.00 

               Ken Berry        463        128     124.00     147.00     171.00 

             Jim Spencer        511        140     137.75     162.00     187.00 

           Don Kessinger        631        168     158.00     187.00     216.00 

           Luis Alvarado        183         41      40.00      50.00      59.00 

               Ron Santo        555        148     116.00     140.00     165.00 

             Ron Swaboda        245         57      50.00      61.00      73.00 

         Rico Petrocelli        583        152     111.00     134.00     161.00 

         Ellie Rodriguez        231         52      43.00      53.00      65.00 

            George Scott        480        142      91.00     111.00     133.00 

               Del Unser        322         83      60.00      74.00      89.00 

          Billy Williams        636        205     120.00     145.00     173.00 

         Bert Campaneris        603        168     102.00     126.00     154.00 

          Thurman Munson        453        137      68.00      85.00     104.00 

               Max Alvis        115         21      14.00      19.00      24.00 


    Log pointwise predictive density: -83.06


     ==============================partially_pooled - TRAIN============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente         45         18      12.00      14.00      17.00 

          Frank Robinson         45         17      11.00      14.00      16.00 

            Frank Howard         45         16      11.00      14.00      16.00 

           Jay Johnstone         45         15      11.00      13.00      16.00 

               Ken Berry         45         14      10.00      13.00      15.00 

             Jim Spencer         45         14      10.00      13.00      15.00 

           Don Kessinger         45         13      10.00      12.00      15.00 

           Luis Alvarado         45         12      10.00      12.00      14.00 

               Ron Santo         45         11       9.00      12.00      14.00 

             Ron Swaboda         45         11       9.00      11.00      14.00 

         Rico Petrocelli         45         10       9.00      11.00      14.00 

         Ellie Rodriguez         45         10       9.00      11.00      13.00 

            George Scott         45         10       9.00      11.00      13.00 

               Del Unser         45         10       9.00      11.00      13.00 

          Billy Williams         45         10       9.00      11.00      13.00 

         Bert Campaneris         45          9       8.00      11.00      13.00 

          Thurman Munson         45          8       8.00      10.00      13.00 

               Max Alvis         45          7       7.00      10.00      12.00 


     ==============================partially_pooled - TEST============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente        412        145     116.00     131.00     148.00 

          Frank Robinson        471        144     129.00     146.00     163.00 

            Frank Howard        566        160     152.00     170.00     190.00 

           Jay Johnstone        320         76      83.00      94.00     105.00 

               Ken Berry        463        128     115.75     130.50     147.00 

             Jim Spencer        511        140     129.00     145.00     162.00 

           Don Kessinger        631        168     154.00     173.00     194.00 

           Luis Alvarado        183         41      42.00      49.00      55.00 

               Ron Santo        555        148     125.00     142.00     161.00 

             Ron Swaboda        245         57      54.00      63.00      71.00 

         Rico Petrocelli        583        152     127.00     145.00     163.00 

         Ellie Rodriguez        231         52      49.00      57.00      65.00 

            George Scott        480        142     104.00     118.00     134.00 

               Del Unser        322         83      69.00      80.00      91.00 

          Billy Williams        636        205     137.00     157.00     178.00 

         Bert Campaneris        603        168     125.00     144.00     163.00 

          Thurman Munson        453        137      90.00     105.00     119.00 

               Max Alvis        115         21      21.00      25.00      30.00 


    Log pointwise predictive density: -75.02


     ==============================partially_pooled_with_logit - TRAIN============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente         45         18      11.00      13.00      15.00 

          Frank Robinson         45         17      11.00      13.00      15.00 

            Frank Howard         45         16      10.00      13.00      15.00 

           Jay Johnstone         45         15      10.00      12.00      15.00 

               Ken Berry         45         14      10.00      12.00      14.00 

             Jim Spencer         45         14      10.00      12.00      14.00 

           Don Kessinger         45         13      10.00      12.00      14.00 

           Luis Alvarado         45         12      10.00      12.00      14.00 

               Ron Santo         45         11       9.00      12.00      14.00 

             Ron Swaboda         45         11       9.00      11.50      14.00 

         Rico Petrocelli         45         10       9.00      11.00      14.00 

         Ellie Rodriguez         45         10       9.00      11.00      14.00 

            George Scott         45         10       9.00      12.00      14.00 

               Del Unser         45         10       9.00      11.00      14.00 

          Billy Williams         45         10       9.00      11.00      14.00 

         Bert Campaneris         45          9       9.00      11.00      13.00 

          Thurman Munson         45          8       9.00      11.00      13.00 

               Max Alvis         45          7       9.00      11.00      13.00 


     ==============================partially_pooled_with_logit - TEST============================== 

                            At-bats ActualHits  Pred(p25)  Pred(p50)  Pred(p75)
        Roberto Clemente        412        145     107.00     117.00     130.25 

          Frank Robinson        471        144     120.00     132.00     146.00 

            Frank Howard        566        160     143.00     158.00     172.00 

           Jay Johnstone        320         76      80.00      88.00      97.00 

               Ken Berry        463        128     114.00     126.00     137.00 

             Jim Spencer        511        140     126.00     138.00     151.00 

           Don Kessinger        631        168     154.00     169.00     184.00 

           Luis Alvarado        183         41      43.00      48.00      54.00 

               Ron Santo        555        148     131.00     144.00     157.00 

             Ron Swaboda        245         57      57.00      63.00      70.00 

         Rico Petrocelli        583        152     137.00     150.00     163.00 

         Ellie Rodriguez        231         52      53.00      59.00      66.00 

            George Scott        480        142     111.00     123.00     135.00 

               Del Unser        322         83      74.00      83.00      91.00 

          Billy Williams        636        205     149.00     164.00     178.00 

         Bert Campaneris        603        168     137.00     152.00     166.00 

          Thurman Munson        453        137     101.00     113.00     125.00 

               Max Alvis        115         21      24.00      28.00      32.00 


    Log pointwise predictive density: -72.98







|


.. code-block:: default


    import argparse
    import os

    import numpy as onp

    import jax.numpy as np
    import jax.random as random
    from jax.scipy.special import logsumexp

    import numpyro
    import numpyro.distributions as dist
    from numpyro.examples.datasets import BASEBALL, load_dataset
    from numpyro.infer import MCMC, NUTS, Predictive, log_likelihood


    def fully_pooled(at_bats, hits=None):
        r"""
        Number of hits in $K$ at bats for each player has a Binomial
        distribution with a common probability of success, $\phi$.

        :param (np.DeviceArray) at_bats: Number of at bats for each player.
        :param (np.DeviceArray) hits: Number of hits for the given at bats.
        :return: Number of hits predicted by the model.
        """
        phi_prior = dist.Uniform(0, 1)
        phi = numpyro.sample("phi", phi_prior)
        num_players = at_bats.shape[0]
        with numpyro.plate("num_players", num_players):
            return numpyro.sample("obs", dist.Binomial(at_bats, probs=phi), obs=hits)


    def not_pooled(at_bats, hits=None):
        r"""
        Number of hits in $K$ at bats for each player has a Binomial
        distribution with independent probability of success, $\phi_i$.

        :param (np.DeviceArray) at_bats: Number of at bats for each player.
        :param (np.DeviceArray) hits: Number of hits for the given at bats.
        :return: Number of hits predicted by the model.
        """
        num_players = at_bats.shape[0]
        with numpyro.plate("num_players", num_players):
            phi_prior = dist.Uniform(0, 1)
            phi = numpyro.sample("phi", phi_prior)
            return numpyro.sample("obs", dist.Binomial(at_bats, probs=phi), obs=hits)


    def partially_pooled(at_bats, hits=None):
        r"""
        Number of hits has a Binomial distribution with independent
        probability of success, $\phi_i$. Each $\phi_i$ follows a Beta
        distribution with concentration parameters $c_1$ and $c_2$, where
        $c_1 = m * kappa$, $c_2 = (1 - m) * kappa$, $m ~ Uniform(0, 1)$,
        and $kappa ~ Pareto(1, 1.5)$.

        :param (np.DeviceArray) at_bats: Number of at bats for each player.
        :param (np.DeviceArray) hits: Number of hits for the given at bats.
        :return: Number of hits predicted by the model.
        """
        m = numpyro.sample("m", dist.Uniform(0, 1))
        kappa = numpyro.sample("kappa", dist.Pareto(1.5))
        num_players = at_bats.shape[0]
        with numpyro.plate("num_players", num_players):
            phi_prior = dist.Beta(m * kappa, (1 - m) * kappa)
            phi = numpyro.sample("phi", phi_prior)
            return numpyro.sample("obs", dist.Binomial(at_bats, probs=phi), obs=hits)


    def partially_pooled_with_logit(at_bats, hits=None):
        r"""
        Number of hits has a Binomial distribution with a logit link function.
        The logits $\alpha$ for each player is normally distributed with the
        mean and scale parameters sharing a common prior.

        :param (np.DeviceArray) at_bats: Number of at bats for each player.
        :param (np.DeviceArray) hits: Number of hits for the given at bats.
        :return: Number of hits predicted by the model.
        """
        loc = numpyro.sample("loc", dist.Normal(-1, 1))
        scale = numpyro.sample("scale", dist.HalfCauchy(1))
        num_players = at_bats.shape[0]
        with numpyro.plate("num_players", num_players):
            alpha = numpyro.sample("alpha", dist.Normal(loc, scale))
            return numpyro.sample("obs", dist.Binomial(at_bats, logits=alpha), obs=hits)


    def run_inference(model, at_bats, hits, rng_key, args):
        kernel = NUTS(model)
        mcmc = MCMC(kernel, args.num_warmup, args.num_samples, num_chains=args.num_chains,
                    progress_bar=False if "NUMPYRO_SPHINXBUILD" in os.environ else True)
        mcmc.run(rng_key, at_bats, hits)
        return mcmc.get_samples()


    def predict(model, at_bats, hits, z, rng_key, player_names, train=True):
        header = model.__name__ + (' - TRAIN' if train else ' - TEST')
        predictions = Predictive(model, posterior_samples=z)(rng_key, at_bats)['obs']
        print_results('=' * 30 + header + '=' * 30,
                      predictions,
                      player_names,
                      at_bats,
                      hits)
        if not train:
            post_loglik = log_likelihood(model, z, at_bats, hits)['obs']
            # computes expected log predictive density at each data point
            exp_log_density = logsumexp(post_loglik, axis=0) - np.log(np.shape(post_loglik)[0])
            # reports log predictive density of all test points
            print('\nLog pointwise predictive density: {:.2f}\n'.format(exp_log_density.sum()))


    def print_results(header, preds, player_names, at_bats, hits):
        columns = ['', 'At-bats', 'ActualHits', 'Pred(p25)', 'Pred(p50)', 'Pred(p75)']
        header_format = '{:>20} {:>10} {:>10} {:>10} {:>10} {:>10}'
        row_format = '{:>20} {:>10.0f} {:>10.0f} {:>10.2f} {:>10.2f} {:>10.2f}'
        quantiles = onp.quantile(preds, [0.25, 0.5, 0.75], axis=0)
        print('\n', header, '\n')
        print(header_format.format(*columns))
        for i, p in enumerate(player_names):
            print(row_format.format(p, at_bats[i], hits[i], *quantiles[:, i]), '\n')


    def main(args):
        _, fetch_train = load_dataset(BASEBALL, split='train', shuffle=False)
        train, player_names = fetch_train()
        _, fetch_test = load_dataset(BASEBALL, split='test', shuffle=False)
        test, _ = fetch_test()
        at_bats, hits = train[:, 0], train[:, 1]
        season_at_bats, season_hits = test[:, 0], test[:, 1]
        for i, model in enumerate((fully_pooled,
                                   not_pooled,
                                   partially_pooled,
                                   partially_pooled_with_logit,
                                   )):
            rng_key, rng_key_predict = random.split(random.PRNGKey(i + 1))
            zs = run_inference(model, at_bats, hits, rng_key, args)
            predict(model, at_bats, hits, zs, rng_key_predict, player_names)
            predict(model, season_at_bats, season_hits, zs, rng_key_predict, player_names, train=False)


    if __name__ == "__main__":
        assert numpyro.__version__.startswith('0.2.4')
        parser = argparse.ArgumentParser(description="Baseball batting average using HMC")
        parser.add_argument("-n", "--num-samples", nargs="?", default=3000, type=int)
        parser.add_argument("--num-warmup", nargs='?', default=1500, type=int)
        parser.add_argument("--num-chains", nargs='?', default=1, type=int)
        parser.add_argument('--device', default='cpu', type=str, help='use "cpu" or "gpu".')
        args = parser.parse_args()

        numpyro.set_platform(args.device)
        numpyro.set_host_device_count(args.num_chains)

        main(args)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  48.146 seconds)


.. _sphx_glr_download_examples_baseball.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: baseball.py <baseball.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: baseball.ipynb <baseball.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
